#별다른 설정 없이 경량화 linux(alphine linux) 설치됨

#컨테이너 안에서 사용할 java 설치
FROM openjdk:11

#작업 디렉터리 설정
WORKDIR /app

#localhost에 HelloWorld1.java 파일을 컨테이너 /app폴더로 복사
COPY HelloWorld1.java /app

#컨테이너에서 실행
RUN javac HelloWorld1.java

#마지막 실행 작업시에는 일반적으로 배열형식에 명령문 사용
CMD ["java", "HelloWorld1"]

#도커 이미지 생성 명령어
#도커 이미지? 일종의 압축파일 // 모든게 담겨있음
#도커파일 경로가 현재위치이고, 파일명이 DockerFile이면 "-f 도커파일경로" 옵션 생략 가능
#docker build -t 이미지명:태그명(일반적으로 버전명) -f 도커파일경로 빌드컨텍스트위치
## docker build -t helloworld1:v1 -f .\Dockerfile1 .

# 실행방법
## docker run helloworld1:v1
# docker run -p 8087:80 nginx

# docker nginx 다운받기
## docker pull nginx (뒤에 버전이 없으면 가장 최신버전으로 받음)
# 실행하기
## docker run -p 8087:80
## docker run -d -p 8087:80 >> -d는 백그라운드에서 실행
# > 8087은 도커의 default 적은 외부폴트, 80은 내부적인 포트
# > 8087은 내가 실제 접속할 포트, 오른쪽인 80은 내부 프로그램에

# docker ps : 조회
## docker ps -a : 전체조회
# docker stop 아이디 : 해당 아이디 정지
# docker rm 아이디 : 해당 아이디 삭제

# docker run --name my-nginx -p 8087:80 nginx : my-nginx 이름으로 도커 실행

# docker exec -it 컨테이너ID /bin/sh : 도커컨테이너 내부로 접속

# docker exec -it 마리아DB아이디 mariadb -u root -p : mariadb 컨테이너 db 접속